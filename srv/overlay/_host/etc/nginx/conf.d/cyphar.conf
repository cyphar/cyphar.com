# Copyright (C) 2014-2020 Aleksa Sarai <cyphar@cyphar.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Redirect everything to SSL, and provide acme-challenge support.
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name .cyphar.com;

	location / {
		return 302 https://$host$request_uri;
	}

	# Needed for http-01 ACME validation (which is the only trivial way of
	# getting a certificate without storing credentials for DNS zone
	# configuration on your edge node).
	location /.well-known/acme-challenge/ {
		root /srv/wkd;
	}
}

# Redirect cyphar.com to www.cyphar.com.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name cyphar.com;

	ssl_certificate /etc/letsencrypt/live/www.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.cyphar.com/privkey.pem;
	include conf.d/nginx-tls.conf;

	location / {
		return 302 https://www.cyphar.com$request_uri;
	}

	# Our global .well-known is served from cyphar.com. This isn't really
	# required by anything, but it feels much cleaner to have well-known only
	# present for the root.
	location /.well-known/ {
		root /srv/wkd;
		expires 24h;

		include conf.d/nginx-tls-headers.conf;
		add_header Access-Control-Allow-Origin "*";
		add_header Cache-Control "public";
	}
}

# Serve LGTM service.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name lgtm.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/lgtm.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/lgtm.cyphar.com/privkey.pem;
	include conf.d/nginx-tls.conf;

	# Tunnel to LXC.
	location / {
		include conf.d/nginx-tls-headers.conf;
		proxy_pass http://unix:/srv/run/www-lgtm.sock:;
	}
}

# Static files.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name static.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/www.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.cyphar.com/privkey.pem;
	include conf.d/nginx-tls.conf;

	# Allow indexes for static directory.
	location / {
		root /srv/static;
		autoindex on;

		include conf.d/nginx-tls-headers.conf;

		# static.cyphar.com is an unbelievably dumb static host.
		add_header Content-Security-Policy
			"base-uri 'none'; default-src 'none'; frame-ancestors 'none'; form-action 'none'" always;
		# TODO: Add Feature-Policy. Annoyingly it can't be switched to
		#       deny-by-default.
	}
}

# www.cyphar.com config.
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;
	server_name www.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/www.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.cyphar.com/privkey.pem;
	include conf.d/nginx-tls.conf;

	# Tunnel to LXC.
	location / {
		include conf.d/nginx-tls-headers.conf;
		proxy_pass http://unix:/srv/run/www-prod.sock:;

		# cyphar.com is a fairly dumb website, so disable as much as possible
		# in the CSP (and we don't do any foreign requests).
		add_header Content-Security-Policy
			"base-uri 'none'; default-src 'none'; frame-ancestors 'none'; form-action 'none'; script-src 'self'; font-src 'self'; img-src 'self'; style-src 'self'" always;
		# TODO: Add Feature-Policy. Annoyingly it can't be switched to
		#       deny-by-default.

		# Add our .onion address URL
		add_header Onion-Location 'jfxets67sl7jq7euqo5hypuu2tfahfw25kejz53pjdbwyq2t4oseswqd.onion$request_uri' always;
	}

	# We redirect to cyphar.com for .well-known.
	location /.well-known/ {
		return 302 https://cyphar.com$request_uri;
	}
}

# beta.cyphar.com config.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name beta.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/beta.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beta.cyphar.com/privkey.pem;
	include conf.d/nginx-tls.conf;

	# Tunnel to LXC.
	location / {
		include conf.d/nginx-tls-headers.conf;
		proxy_pass http://unix:/srv/run/www-beta.sock:;
	}
}
