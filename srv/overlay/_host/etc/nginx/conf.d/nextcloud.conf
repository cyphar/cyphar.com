# Copyright (C) 2014-2020 Aleksa Sarai <cyphar@cyphar.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Serve NextCloud.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name cloud.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/cloud.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/cloud.cyphar.com/privkey.pem;
	include conf.d/nginx-tls.conf;

	# The data stored in NextCloud is fairly private, so only permit traffic
	# from inside our network (or from WireGuard). Note that this means that
	# features like "shared links" are broken -- and we cannot whitelist them
	# because a PHP RCE has the same problem.
	#allow 10.0.0.0/8;
	#deny all;

	# Tunnel to LXC.
	location / {
		# Rule borrowed from `.htaccess` to handle Microsoft DAV clients
		if ( $http_user_agent ~ ^DavClnt ) {
			return 302 /remote.php/webdav/$is_args$args;
		}

		proxy_redirect off;
		proxy_buffering off;
		http2_push_preload on;
		client_max_body_size 1024M;

		proxy_headers_hash_bucket_size 128;
		include conf.d/nginx-tls-headers.conf;
		# Don't allow indexing of our NextCloud instance.
		add_header X-Robots-Tag "noindex, nofollow" always;

		# NextCloud automatically sets a bunch of duplicate headers which we
		# set for TLS servers -- this causes duplicate headers which can
		# confuse NextCloud's security checker. So we strip out their headers
		# so we can control them.
		proxy_hide_header X-Frame-Options;
		proxy_hide_header X-Content-Type-Options;
		proxy_hide_header X-XSS-Protection;
		proxy_hide_header X-Robots-Tag;
		proxy_hide_header X-Download-Options;
		proxy_hide_header X-Permitted-Cross-Domain-Policies;
		proxy_hide_header Referrer-Policy;
		# No need to infoleak our PHP version.
		proxy_hide_header X-Powered-By;

		proxy_pass http://unix:/srv/run/nextcloud.sock:;
	}

	# Make a regex exception for `/.well-known` so that clients can still
	# access it despite the existence of the regex rule
	# `location ~ /(\.|autotest|...)` which would otherwise handle requests
	# for `/.well-known`.
	location ^~ /.well-known {
		# The following 6 rules are borrowed from `.htaccess`
		location = /.well-known/carddav     { return 301 /remote.php/dav/; }
		location = /.well-known/caldav      { return 301 /remote.php/dav/; }
		# Anything else is dynamically handled by Nextcloud
		location ^~ /.well-known            { return 301 /index.php$uri; }
	}
}
